# Generated by Django 3.2.14 on 2024-04-24 11:36
import re

from django.core.exceptions import ValidationError
from django.db import migrations
from localflavor.es.forms import ESIdentityCardNumberField

from apps.cc_users.constansts import PASSPORT_REGEX_PATTERNS
from apps.coopolis.choices import DocumentTypes


def backup_id_number(apps, schema_editor):
    print('')
    user_model = apps.get_model("coopolis", "User")
    for user in user_model.objects.all():
        user.id_number_backup = user.id_number
        user.save()
    print("Fet: còpia de seguretat de tots els valors de User.id_number cap a"
          " User.id_number_backup")


def validate_passport(id_number):
    """
    This is a method in User model, but in migrations we cannot access
    those methods. Copying and adaptint it here.
    """
    country_match = any(
        re.match(pattern, id_number) for pattern in PASSPORT_REGEX_PATTERNS)
    return country_match


def validate_dni_nie(id_number):
    """
    This is a method in User model, but in migrations we cannot access
    those methods. Copying and adaptint it here.
    """
    try:
        ESIdentityCardNumberField().clean(id_number)
    except ValidationError:
        return False
    return True


def fill_id_number_type(apps, schema_editor):
    print('')
    user_model = apps.get_model("coopolis", "User")

    for user in user_model.objects.all():
        if user.id_number_type:
            continue
        id_type = DocumentTypes.NO_DNI
        # By mistake this field was nullable. We're making sure
        # to turn all registries into strings.
        id_number = user.id_number or ""
        id_number = re.sub('[^0-9a-zA-Z]+', "", id_number)
        if user.id_number:
            if validate_dni_nie(id_number):
                id_type = DocumentTypes.DNI
                if user.id_number[0] in "XYZxyz":
                    id_type = DocumentTypes.NIE
            else:
                if validate_passport(id_number):
                    id_type = DocumentTypes.PASSPORT
                else:
                    id_number = ""
        user.id_number = id_number
        user.id_number_type = id_type
        user.save()
    print("Actualitzats: Nº d'identificació tots els usuaris s'ha validat i "
          "el camp 'id_number_type' actualitzat. Els casos que no han passat "
          "cap validació, se'ls hi ha eliminat el DNI.")


class Migration(migrations.Migration):

    dependencies = [
        ('coopolis', '0127_auto_20240424_1702'),
    ]

    operations = [
        migrations.RunPython(backup_id_number),
        migrations.RunPython(fill_id_number_type),
    ]
