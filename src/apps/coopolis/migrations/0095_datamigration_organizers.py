# Generated by Django 3.2.9 on 2022-01-04 09:10
from django.conf import settings
from django.db import migrations
from django.db.models import F

from apps.coopolis.choices import CirclesChoices


def migrate_organizer_to_circle(apps, schema_editor):
    """
    This migration comes out of the necessity for normnalizing the information
    in:
    - entity and organizer fields in Activity
    - stage_organizer in ProjectStage and ProjectStageSession.entity.

    Organizer was supposed to contain the different circles, but with the mix
    of some mistakes from Codi and some ateneus, nowadays some ateneus have
    the circles stored in the entity field instead.

    We created a new field 'circle' which is a choices instead of a foreignkey
    field, and this migration's purpose is to fill this field with the right
    organizer/entity information.
    """
    activity_model = apps.get_model('cc_courses', 'Activity')
    stage_model = apps.get_model('coopolis', 'ProjectStage')
    stagesession_model = apps.get_model('coopolis', 'ProjectStageSession')
    organizer_model = apps.get_model('cc_courses', 'Organizer')
    entity_model = apps.get_model('cc_courses', 'Entity')
    print("settings.PROJECT_NAME: " + settings.PROJECT_NAME)
    if "Alt Pirineu" in settings.PROJECT_NAME:
        migrate_altpirineu(
            activity_model,
            stage_model,
            organizer_model,
            entity_model,
            stagesession_model,
        )
    # elif "Baix Llobregat" in settings.PROJECT_NAME:
    #     migrate_altpirineu(activity_model, stage_model, organizer_model, entity_model)
    # elif "Catalunya Central" in settings.PROJECT_NAME:
    #     migrate_altpirineu(activity_model, stage_model, organizer_model, entity_model)
    # elif "Coopcamp" in settings.PROJECT_NAME:
    #     migrate_altpirineu(activity_model, stage_model, organizer_model, entity_model)
    # elif "Coopmaresme" in settings.PROJECT_NAME:
    #     migrate_altpirineu(activity_model, stage_model, organizer_model, entity_model)
    # elif "Coòpolis" in settings.PROJECT_NAME:
    #     migrate_altpirineu(activity_model, stage_model, organizer_model, entity_model)
    # elif "Coopsetània" in settings.PROJECT_NAME:
    #     migrate_altpirineu(activity_model, stage_model, organizer_model, entity_model)
    # elif "La Col·lectiva" in settings.PROJECT_NAME:
    #     migrate_altpirineu(activity_model, stage_model, organizer_model, entity_model)
    # elif "Ponent Coopera" in settings.PROJECT_NAME:
    #     migrate_altpirineu(activity_model, stage_model, organizer_model, entity_model)
    # elif "Terres de l'Ebre" in settings.PROJECT_NAME:
    #     migrate_altpirineu(activity_model, stage_model, organizer_model, entity_model)
    # elif "Terres Gironines" in settings.PROJECT_NAME:
    #     migrate_altpirineu(activity_model, stage_model, organizer_model, entity_model)
    # elif "Vallès Occidental" in settings.PROJECT_NAME:
    #     migrate_altpirineu(activity_model, stage_model, organizer_model, entity_model)


def migrate_altpirineu(
            activity_model,
            stage_model,
            organizer_model,
            entity_model,
            stagesession_model,
        ):
    """
    La dada d'ateneu/cercle la tenen al camp Entitat, tot i que només tenen
    l'Ateneu.
    L'entitat es diu ATENEU COOPERATIU DE L'ALT PIRINEU I ARAN.

    A Organizer hi tenen consells comarcals i el propi ateneu, cosa que serien
    les entitats, per tant caldria moure-ho a Entity.

    Caldria:
    - assignar totes les Activity i ProjectStage al circle.CERCLE0
    - assignar totes les Activity.entity i ProjectStageSession.entity a None.
    - eliminar tots (l'únic) registre d'Entity.
    - copiar tots els Organizer cap a Entity.
    - per cada Activity, assignar Activity.entity = Activity.organizer.
    - per cada ProjectStage, assignar a tots els
      seus ProjectStageSession.entity = ProjectStage.stage_organizer.
    - eliminar tots els registres d'Organizer.
    """
    print("REORGRANITZANT CERCLES PER ALT PIRINEU I ARAN")
    print("assignar totes les Activity i ProjectStage al circle.CERCLE0")
    updated = activity_model.objects.all().update(
        circle=CirclesChoices.CERCLE0,
        entity=None,
    )
    print(f"{updated} registres actualitzats.")
    print("assignar totes les Activity.entity i ProjectStageSession.entity a None.")
    updated = stagesession_model.objects.all().update(
        entity=None,
    )
    print(f"{updated} registres actualitzats.")
    print("eliminar tots (l'únic) registre d'Entity.")
    entity_model.objects.all().delete()
    print("copiar tots els Organizer cap a Entity.")
    for organizer in organizer_model.objects.all():
        entity = entity_model(id=organizer.id, name=organizer.name)
        entity.save()
    for entity in entity_model.objects.all():
    print("per cada Activity, assignar Activity.entity = Activity.organizer.")
    for activity in activity_model.objects.all():
        if not activity.organizer:
            continue
        activity.entity_id = activity.organizer.id
        activity.save()
    print("per cada ProjectStage, assignar a tots els "
          "seus ProjectStageSession.entity = ProjectStage.stage_organizer.")
    for stage in stage_model.objects.all():
        stage.stage_sessions.all().update(
            entity=stage.stage_organizer,
        )
    print("eliminar tots els registres d'Organizer.")
    organizer_model.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('coopolis', '0094_projectstage_circle'),
    ]

    operations = [
        migrations.RunPython(migrate_organizer_to_circle),
    ]
